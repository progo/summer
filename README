SumItUp
-------

Ever wanted to do in a quick list of numbers, maybe having a bit of annotation
here and there? Big spreadsheets are way too big to be comfy and they won't
even support vi keys! And the great little sc might be too little for our
purposes.

Enter SumItUp (wanted: a better name), a Vim plugin with a bit of arithmetic
functionality that allows you to write your notes in natural languages and
SumItUp picks up the numerical bits. I actually wanted to just use the
nice-looking Soulver but it's for Mac only. Hence, SumItUp.

So, what can you do?

- Just throw in numbers like this: 200
- Make calculations inside angle brackets: <200/2 = 100.0>
- Define variables the following manner:
        @var 100
        @foo <200+30 = 230>
- Use those variables in further calculations:
        <@var + @foo = 330>
- Use the predefined variables well:
        <@sum = 960.0>
        <@avg = 192.0>
- Comment lines with ; so that the variables don't define.
- Mark lines with -- (as the first or the last thing) to keep numbers from
  accumulating in @sum.


INSTALLATION: Copy the stuff from `vim-sumitup/` to your `.vim`. Pathogen is
recommended! Set the path to your copy of 'parsin.py' in `.vimrc` in
the variable `g:sumitup_parser`.  Now you can set any buffer's filetype to
"sumitup". Alternatively edit a ".sum" ended file and Vim will apply the
filetype to it.

USAGE: Three key bindings are provided:
    <Localleader>e   to re-evaluate the buffer.
    <Localleader>c   to toggle the current line commented or not.
    <Localleader>a   to toggle the accumulate mark on the current line.

    I'm not sure what the default for <Localleader> is, so you can make sure
    it's something sensible by setting up maplocalleader = ',' in your .vimrc:

        let maplocalleader = ','

TIPS: For bash and zsh:
    alias Calc='vim `tempfile -pcalc- -s.sum`'

BUGS AND ISSUES: see TODO (and the source :)


